
clc;       % clear consul
clear all; % clear all variable
% Ball Threshold Min & Max Values
min_ball=80;
max_ball=214;
% number of frams
frams = 80;
% Ball Pos initialize
old_ball_pos_x=0;
old_ball_pos_y=0;
old_posPedal = [0 0];
ballSpend= [];
PedalSpend= [];
ball_vel_x=0;
ball_vel_y=0;
ball_delta_x=25;
ball_delta_y=25;
count=0;


for i = 21: frams
    fname=strcat('TennisSet2/stennis.',int2str(i),'.ppm'); % Incrimental String Variable for Indexing file name
 
    if (i<35)
        ball_delta_x=35;
        ball_delta_y=35;
    else
      ball_delta_x=25;
      ball_delta_y=25;     
    end
 
    if (i>80)
        ball_delta_x=30;
        ball_delta_y=15;
    end
 
 
       k=imread(fname);      
       k1=k;
    if (old_ball_pos_x ~=0)
        k1=imcrop(k,[ round(old_ball_pos_x-ball_delta_x) round(old_ball_pos_y-ball_delta_y) ball_delta_x.*2 ball_delta_y.*2 ]);
    end
 
 
    ndims(k1)
    [rows, columns, numberOfColorChannels] = size(k1);

    if numberOfColorChannels > 1
        
            I = rgb2gray(k1);
    else
   
        I = k1;
    end
 
    I=im2double(I);        
    J = medfilt2(I,[3 3]); 
    I2 = imadjust(J);       
    Ib = I2> 0.8627;        
 
    [labeled,numObjects] = bwlabel(Ib,4);              
    graindata = regionprops(labeled,'all');           
    display(i);
    a_f = find( [graindata.Area] > min_ball & [graindata.Area] < max_ball);   
    c1=length(a_f);

    sel=1;    
    for j = 1 : c1   
    
        Ma=graindata(a_f(j)).MajorAxisLength;
        Mi=graindata(a_f(j)).MinorAxisLength;
        ratio_w_h =   Ma./Mi;
    
        if (ratio_w_h<1.7)  
         sel = a_f(j);
         end
    end
    
    [ball, bat] = GetBatPosition(imread(fname));

    
    hold on;
   
 
    set(findobj(gca,'Type','line','Color',[0 0 1]),...
    'Color','Blue',...
    'LineWidth',3)
 
    c1=graindata(sel).Centroid;
    pos_list(1,i+1)=c1(1);
    pos_list(2,i+1)=240-c1(2);
    %plot(c1(1)+old_ball_pos_x-ball_delta_x,c1(2)+old_ball_pos_y-ball_delta_y,'rx');
 
    for tt=0:0.05:(2*pi)
         %plot(c1(1)+old_ball_pos_x-ball_delta_x+40*cos(tt),c1(2)+old_ball_pos_y-ball_delta_y+40*sin(tt),'g');
    end
 
     
        ball_vel_x = (old_ball_pos_x - c1(1))./24; % 24 frame in second     
        ball_vel_y = (old_ball_pos_y - c1(2))./24;
        posdPedal = posPedal - old_posPedal./24;
     
    
    ballSpend = [ballSpend (norm([ball_vel_x ball_vel_y]) * 0.22 )];
    sPedal = norm(posdPedal) * 0.22;
   
    if (count>0)
        old_ball_pos_x=old_ball_pos_x-ball_delta_x+c1(1);
        old_ball_pos_y=old_ball_pos_y-ball_delta_y+c1(2);  
    else
        old_ball_pos_x=c1(1);
        old_ball_pos_y=c1(2);       
    end
        count=count+1;
    old_posPedal = posPedal;
   % pause(0.01);
 
end

plot(ballSpend)
Pingpongballspeedmean = mean(ballSpend)

